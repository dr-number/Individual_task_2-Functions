import math

COLOR_GREEN = '\033[92m'
COLOR_OKCYAN = '\033[96m'
COLOR_OKBLUE = '\033[94m'
COLOR_WARNING = '\033[93m'
COLOR_FAIL = '\033[91m'
_COLOR_ENDC = '\033[0m'

MIN_VALUE = -10_000
MAX_VALUE = 10_000

_EX_1 = '1'
_EX_2 = '2'
_EX_3 = '3'
_EX_4 = '4'
_EX_5 = '5'
_EX_6 = '6'

_ARRAY_EX = [_EX_1, _EX_2, _EX_3, _EX_4, _EX_5, _EX_6]

def get_text_color(text: str, color: str)-> str:
    return f'{color}{text}{_COLOR_ENDC}'



def main():
    while True:
        print(
            "\nЛарионов гр. 410з. Программирование на языках высокого уровня\n"
            "Индивидуальное задание №2 Функции. Вариант 3.\n"
            "Какую задачу выполнить: \n"
            f'''{get_text_color(f'{_EX_1}) ', COLOR_WARNING)}
            Оформить функцию поиска количества элементов равных 5. В главной
            программе дано 3 одномерных массива p, q, r длиной 10 элементов
            каждый. Применить функцию для каждого из 3 -х заданных массивов.\n'''
            f'''{get_text_color(f'{_EX_2}) ', COLOR_WARNING)}
            Оформить функцию поиска номера последнего нулевого элемента в
            массиве. В главной программе дано 3 одномерных массива a, b, c длиной
            20 элементов каждый. Применить функцию для каждого из 3-х заданных
            массивов. Найти сумму найденных номеров элементов.\n'''
            f'''{get_text_color(f'{_EX_3}) ', COLOR_WARNING)}
            Описать функцию, вычисляющую количество слов «Иванушка» в тексте.
            В главной программе дано 3 текста S1, S2, S3. Выяснить, в каком тексте
            больше слов «Иванушка», используя функцию.\n'''
            f'''{get_text_color(f'{_EX_4}) ', COLOR_WARNING)}
            Описать рекурсивную функцию C(m,n) целого типа, находящую число
            сочетаний из n элементов по m, используя формулу: C(0,n) = C(n,n) = 1,
            C(m,n) = C(m,n–1) + C(m–1,n–1) при 0 < m < n (m и n — целые параметры;
            n > 0, 0 <= m <= n). Дано число N и пять различных значений M. Вывести
            числа C(M,N) вместе с количеством рекурсивных вызовов функции C,
            потребовавшихся для их нахождения.\n'''
            f'''{get_text_color(f'{_EX_5}) ', COLOR_WARNING)}
            Описать lambda-функцию с reduce(), чтобы объединить строки, добавляя
            между ними пробел. В программе создайте 2 списка слов и используя
            вашу функцию объедините их в предложение.\n'''
            f'''{get_text_color(f'{_EX_6}) ', COLOR_WARNING)}
            Напишите функцию, которая принимает разделитель и произвольное
            количество строк, а затем возвращает объединенную строку с
            использованием переданного разделителя.\n'''
        )
        select = input('Для выхода введите \'0\'\n')

        if select in _ARRAY_EX:
            globals()[f'_init_ex_{select}']()
        elif select == '0':
            break
        else:
            print(
                f'{get_text_color("Введен неверный номер задачи!", COLOR_FAIL)}'
            )

if __name__ == '__main__':
    main()